variables:
  serviceConnectionToAzure: AzureDevOps
  appName: nodejslinuxsba

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

steps:
- task: NodeTool@0
  inputs:
    versionSpec: '10.x'
  displayName: 'Install Node.js'

- script: |
    npm install
  displayName: 'npm install'

- script: |
    npm test
  displayName: 'Run Mocha tests'

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(System.DefaultWorkingDirectory)'

- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(System.DefaultWorkingDirectory)'
    includeRootFolder: false

- task: AzureRmWebAppDeployment@4
  inputs:
    azureSubscription: $(serviceConnectionToAzure)
    WebAppName: $(appName)
    Package: '$(System.DefaultWorkingDirectory)'
    GenerateWebConfig: true
    WebConfigParameters: '-Handler iisnode -NodeStartFile server/index.js -appType node'

stages:
- stage: Test
  jobs:
  - job: Test
    pool:
      vmImage: 'Ubuntu-16.04'
    continueOnError: false
    steps:
    - script: echo my first build job
- stage: Deploy
  jobs:
    # track deployments on the environment
  - deployment: DeployWeb
    pool:
      vmImage: 'Ubuntu-16.04'
    # creates an environment if it doesnâ€™t exist
    environment: 'ttt-multiplayer-copy'
    strategy:
      # default deployment strategy
      runOnce:
        deploy:
          steps:
          - script: echo my first deployment